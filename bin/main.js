// Generated by Haxe 4.0.0+ef18b627e
(function ($hx_exports, $global) { "use-strict";
var $s = $global.$hx_scope = $global.$hx_scope || {};
var require = (function(r){ return function require(m) { return r[m]; } })($s.__registry__ || {});
var main_MainContext;
var Main = function() { };
Main.main = function() {
	console.log("src/Main.hx:10:","Haxe is great!");
	var initial = new init_InitContext();
	var stream1 = new stream_StreamContext();
	var assemble;
	var main1;
	var loadMain = function() {
		Require.module("maincontext").then(function(_i) {
			var _ = main_MainContext = $s.main_MainContext;
			return _i;
		}).then(function(_1) {
			console.log("src/Main.hx:20:","MainContext classes Loaded");
			main1 = new main_MainContext();
			assemble();
		});
	};
	var assemble1 = function() {
		main1.load();
	};
	assemble = assemble1;
	loadMain();
};
var Require = function() { };
Require.module = function(name) {
	var _this = Require.loaded;
	if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
		var _this1 = Require.loaded;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	var p = new Promise(function(resolve,reject) {
		var doc = window.document;
		var script = null;
		var hasFailed = false;
		var resourceLoaded = function(_) {
			resolve(name);
		};
		var resourceFailed = function(_1) {
			if(!hasFailed) {
				hasFailed = true;
				Require.loaded.remove(name);
				doc.body.removeChild(script);
				reject(name);
			}
		};
		script = doc.createElement("script");
		script.onload = resourceLoaded;
		script.onerror = resourceFailed;
		script.src = Require.jsPath + name + Require.jsExt;
		doc.body.appendChild(script);
	});
	var _this2 = Require.loaded;
	if(__map_reserved[name] != null) {
		_this2.setReserved(name,p);
	} else {
		_this2.h[name] = p;
	}
	return p;
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
};
var init_InitContext = function() {
	this.performerInfo = new init_PerformerInfo();
	this.userInfo = new init_UserInfo();
	console.log("src/init/InitContext.hx:8:","InitContext");
	console.log("src/init/InitContext.hx:9:",this.userInfo);
	console.log("src/init/InitContext.hx:10:",this.performerInfo);
};
var init_PerformerInfo = function() {
	console.log("src/init/PerformerInfo.hx:5:","PerformerInfo");
};
var init_UserInfo = function() {
	console.log("src/init/UserInfo.hx:5:","UserInfo");
};
var stream_StreamContext = function() {
};
var __map_reserved = {};
Require.jsPath = "./";
Require.jsExt = ".js";
Require.loaded = new haxe_ds_StringMap();
$s.a = Require; 
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
